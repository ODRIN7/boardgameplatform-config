
# EMBEDDED SERVER CONFIGURATION
server:
    port: ${port:8080}
    context-path: /
    error.whitelabel.enabled: false
    compression:
      enabled: true
      min-response-size: 1024
      mime-types: text/html, text/xml, text/plain, text/css, application/javascript, application/json

spring:
    aop:
        proxyTargetClass: true

# EUREKA
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
# ZULL
# ZULL
zuul:
  routes:
    auth-service:
        path: http/uaa/**
        url: http://192.168.99.100:8083
        stripPrefix: false
        sensitiveHeaders:
  add-proxy-headers: true
#SECURITY
security:
  basic:
    enabled: false
  oauth2:
    sso:
      loginPath: /login
    resource:
      jwt:
        keyValue: |
              -----BEGIN PUBLIC KEY-----
              MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
              -----END PUBLIC KEY-----
      id: ui
      serviceId: ${PREFIX:}resource

---

spring:
  profiles: docker

# EUREKA
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8081/eureka/

---
spring:
  profiles: standalone

# EUREKA
eureka:
  instance:
    hostname: 192.168.99.100
    port: 8081
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
